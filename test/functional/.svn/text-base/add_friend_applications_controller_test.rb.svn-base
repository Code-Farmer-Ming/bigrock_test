require 'test_helper'
#TODO 测试不全 需添加
class AddFriendApplicationsControllerTest < ActionController::TestCase
  # Replace this with your real tests.
  def setup
    login_as(user_register_infos(:one))
  end
  test "index" do
    get :index
    assert_not_nil assigns(:add_friend_applications)
  end

  test "apply" do
    assert_difference("AddFriendApplication.count") do
      xhr :get ,:apply,:respondent_id=>12
      xhr :post ,:apply,:add_friend_application=>{:respondent_id=>12,:memo=>"apply"}
    end
 
  end
  test "destroy" do
    user= UserRegisterInfo.find(1)
    assert_equal 1, user.add_friend_applications.size

    delete :destroy,:id=>1
    assert_equal 0, user.add_friend_applications.size
  end
  test "accept" do
    assert_difference("AddFriendApplication.count") do
      xhr :get ,:apply,:respondent_id=>12
      xhr :post ,:apply,:add_friend_application=>{:respondent_id=>12,:memo=>"apply"}
    end
    login_as(user_register_infos(:user_012))
    assert_difference("AddFriendApplication.count",-1) do
      post :accept ,:id => assigns(:add_friend).id
    end

    user_register_infos(:one).reload
    assert user_register_infos(:one).friends_user.exists?(user_register_infos(:user_012))
    assert !user_register_infos(:user_012).friends_user.exists?(user_register_infos(:one))
    assert_equal "添加成功！",flash[:success]
  end

  test "accept each" do
    assert_difference("AddFriendApplication.count") do
      xhr :get ,:apply,:respondent_id=>12
      xhr :post ,:apply,:add_friend_application=>{:respondent_id=>12,:memo=>"apply"}
    end
    login_as(user_register_infos(:user_012))
    assert_difference("AddFriendApplication.count",-1) do
      post :accept ,:id => assigns(:add_friend).id,:commit=>"接受并加其为好友"
    end
    user_register_infos(:one).reload
    user_register_infos(:user_012).reload
    assert user_register_infos(:one).friends_user.exists?(user_register_infos(:user_012))
    assert user_register_infos(:user_012).friends_user.exists?(user_register_infos(:one))
    assert_equal "添加成功！",flash[:success]

  end
end
